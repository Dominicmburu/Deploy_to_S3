name: Deploying to S3
on:
  push:
    branches:
      - main

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - name: Get code
              uses: actions/checkout@v4
            - name: Load and cache dependencies
              uses: ./.github/actions/cache
            - name: Lint code
              run: npm run lint
    # test:
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: Get code
    #           uses: actions/checkout@v4
    #         - name: Load and cache dependencies
    #           uses: ./.github/actions/cache
    #         - name: Test code
    #           id: run-tests
    #           run: npm run test
    #         - name: Upload test report
    #           if: failure() && steps.run-tests.outputs == 'failure'
    #           uses: actions/upload-artifact@v4
    #           with:
    #               name: test-report
    #               path: test.json
    build:
        needs: test
        runs-on: ubuntu-latest
        steps:
            - name: Get code
              uses: actions/checkout@v4
            - name: Install dependencies
              run: npm ci
            - name: Build website
              run: npm run build
            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: dist-files
                  path: dist
    deploy:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Get code
              uses: actions/checkout@v4
            - name: Get build artifacts
              uses: actions/download-artifact@v4
              with:
                  name: dist-files
                  path: ./dist
            - name: Output contents
              run: ls
            - name: Deploy site
              id: deploy
              uses: ./.github/actions/deployment
              env:
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              with:
                  bucketName: ${{ secrets.BUCKET_NAME }}
                  distFiles: ./dist
            - name: Output URL
              run: echo "Deployed to ${{ steps.deploy.outputs.url }}"
            